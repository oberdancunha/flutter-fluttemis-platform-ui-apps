name: Fluttemis build release

env:
  flutter_version: "3.3.6"
  flutter_channel: "stable"
  flutter_architecture: x64
  melos_version: "3.1.0"
  fluttemis_app: "fluttemis_platform_ui_app"
  git_checkout_title: "Git checkout"
  install_melos_title: "Install melos tool"
  melos_bootstrap_title: "Melos bootstrap"
  flutter_test_title: "Flutter test"
  generate_localizations_files_title: "Generate localizations files"

on:
  release:
    types:
      - created
   
jobs:
  build-and-release-macos:
    runs-on: macos-latest
    steps:
      - name: ${{env.git_checkout_title}}
        uses: actions/checkout@v2

      - name: "Install flutter ${{env.flutter_version}} version"
        uses: subosito/flutter-action@v2.10.0
        with:
          channel: ${{env.flutter_channel}}
          architecture: ${{env.flutter_architecture}}
          flutter-version: ${{env.flutter_version}}

      - name: Set Up XCode
        uses: devbotsxyz/xcode-select@v1.1.0

      - name: ${{env.install_melos_title}}
        run: flutter pub global activate melos ${{env.melos_version}}

      - name: ${{env.melos_bootstrap_title}}
        run: melos bootstrap --verbose

      - name: ${{env.flutter_test_title}}
        run: melos run test:flutter

      - name: ${{env.generate_localizations_files_title}}
        run: melos run localization:flutter

      - name: Enable build
        run: melos run enable:macos:build

      - name: Build release
        run: melos run macos:build

      - name: Install create-dmg
        run: brew install create-dmg

      - name: Create dmg
        run: melos run macos:create-dmg

      - name: Zip release
        uses: thedoctor0/zip-release@master
        with:
          type: zip
          filename: Fluttemis-macos.zip
          directory: ${{env.fluttemis_app}}/build/macos/Build/Products/Release

      - name: Creating Github DMG release
        uses: svenstaro/upload-release-action@2.5.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{env.fluttemis_app}}/build/macos/Build/Products/Release/Fluttemis.dmg
          asset_name: fluttemis-macos-${{ github.event.release.tag_name }}.dmg
          tag: ${{ github.ref }}
      
      - name: Creating Github ZIP release
        uses: svenstaro/upload-release-action@2.5.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{env.fluttemis_app}}/build/macos/Build/Products/Release/Fluttemis-macos.zip
          asset_name: macos-${{ github.event.release.tag_name }}.zip
          tag: ${{ github.ref }}

  build-and-release-windows:
    runs-on: windows-latest
    steps:
      - name: ${{env.git_checkout_title}}
        uses: actions/checkout@v2

      - name: "Install flutter ${{env.flutter_version}} version"
        uses: subosito/flutter-action@v2.10.0
        with:
          channel: ${{env.flutter_channel}}
          architecture: ${{env.flutter_architecture}}
          flutter-version: ${{env.flutter_version}}
      
      - name: ${{env.install_melos_title}}
        run: flutter pub global activate melos ${{env.melos_version}}

      - name: ${{env.melos_bootstrap_title}}
        run: melos bootstrap --verbose

      - name: ${{env.flutter_test_title}}
        run: melos run test:flutter

      - name: ${{env.generate_localizations_files_title}}
        run: melos run localization:flutter

      - name: Enable build
        run: melos run enable:windows:build

      - name: Build release
        run: melos run windows:build
        
      - name: Generate MSIX-compatible version
        uses: ashley-taylor/regex-property-action@1.2
        id: msixver
        with:
          value: ${{ github.event.release.tag_name }}
          regex: (\-\w+)|(\+\w+)
          replacement: ""

      - name: Write MSIX
        uses: DamianReeves/write-file-action@v1.2
        with:
          path: ${{env.fluttemis_app}}/pubspec.yaml
          contents: |
            msix_config:
              display_name: Fluttemis
              publisher_display_name: Oberdan C.
              identity_name: com.oberdancunha.fluttemis
              msix_version: ${{steps.msixver.outputs.value }}.0
              logo_path: ${{env.fluttemis_app}}/assets/images/launcher/launcher_windows_linux.png
              architecture: x64
              capabilities: "internetClient,removableStorage"
              certificate_path: ${{env.fluttemis_app}}/windows/FLUTTEMIS-CERT.pfx
              certificate_password: ${{ secrets.WIN_CERT_PASS }}
              store: false
          write-mode: append

      - name: Create MSIX
        run: melos run windows:create-msix

      - name: Zip release
        uses: thedoctor0/zip-release@master
        with:
          type: zip
          filename: Fluttemis-windows.zip
          directory: ${{env.fluttemis_app}}/build/windows/Runner/release

      - name: Creating Github MSIX release
        uses: svenstaro/upload-release-action@2.5.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{env.fluttemis_app}}/build/windows/Runner/release/fluttemis.msix
          asset_name: fluttemis-windows-${{ github.event.release.tag_name }}.msix
          tag: ${{ github.ref }}
      
      - name: Creating Github ZIP release
        uses: svenstaro/upload-release-action@2.5.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{env.fluttemis_app}}/build/windows/Runner/release/Fluttemis-windows.zip
          asset_name: windows-${{ github.event.release.tag_name }}.zip
          tag: ${{ github.ref }}

  build-and-release-linux:
    runs-on: ubuntu-latest
    steps:
      - name: ${{env.git_checkout_title}}
        uses: actions/checkout@v2

      - name: "Install flutter ${{env.flutter_version}} version"
        uses: subosito/flutter-action@v2.10.0
        with:
          channel: ${{env.flutter_channel}}
          architecture: ${{env.flutter_architecture}}
          flutter-version: ${{env.flutter_version}}

      - name: Install dependencies
        run: sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-0 libgtk-3-dev libblkid1 liblzma5
      
      - name: ${{env.install_melos_title}}
        run: flutter pub global activate melos ${{env.melos_version}}

      - name: ${{env.melos_bootstrap_title}}
        run: melos bootstrap --verbose

      - name: ${{env.flutter_test_title}}
        run: melos run test:flutter

      - name: ${{env.generate_localizations_files_title}}
        run: melos run localization:flutter

      - name: Enable build
        run: melos run enable:linux:build

      - name: Build release
        run: melos run linux:build

      - name: Set fluttemis.desktop version
        uses: DamianReeves/write-file-action@v1.2
        with:
          path: ${{env.fluttemis_app}}/fluttemis.desktop
          contents: Version=${{ github.event.release.tag_name }}
          write-mode: append

      - name: Set fluttemis.desktop version (snap version)
        uses: DamianReeves/write-file-action@v1.2
        with:
          path: ${{env.fluttemis_app}}/snap/gui/fluttemis.desktop
          contents: Version=${{ github.event.release.tag_name }}
          write-mode: append
      
      - name: Set snapcraft.yaml version
        uses: DamianReeves/write-file-action@v1.0
        with:
          path: ${{env.fluttemis_app}}/snap/snapcraft.yaml
          contents: 'version: "${{ github.event.release.tag_name }}"'
          write-mode: append

      - name: Zip release
        uses: thedoctor0/zip-release@master
        with:
          type: zip
          filename: Fluttemis-linux.zip
          directory: ${{env.fluttemis_app}}/build/linux/x64/release/bundle

      - name: Creating Github ZIP release
        uses: svenstaro/upload-release-action@2.5.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{env.fluttemis_app}}/build/linux/x64/release/bundle/Fluttemis-linux.zip
          asset_name: linux-${{ github.event.release.tag_name }}.zip
          tag: ${{ github.ref }}



